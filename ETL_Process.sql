-- For the ETL Process--
-- explore DATASETS

-- VIEW VLE_INFO TABLE

SELECT ID_SITE, MODULE_TERM, MODULE_CODE, ACTIVITY_TYPE FROM VLE_INFO;

-- VIEW STUDENTVLE_INFO TABLE

SELECT CODE_MODULE, CODE_PRESENTATION, ID_STUDENT, ID_SITE, DATE_,SUM_CLICK FROM
STUDENT_VLEINFO;

-- Creating Staging area tables

DROP TABLE VLEINFO_S1STAGEAREA;

CREATE TABLE VLEINFO_S1STAGEAREA AS SELECT ID_SITE, MODULE_TERM, MODULE_CODE, ACT
IVITY_TYPE FROM VLE_INFO;

SELECT * FROM VLEINFO_S1STAGEAREA;

DROP TABLE STUVLEINFO_S1STAGEAREA;

CREATE TABLE STUVLEINFO_S1STAGEAREA AS SELECT CODE_MODULE, CODE_PRESENTATION, ID_
STUDENT, ID_SITE, DATE_,SUM_CLICK FROM STUDENT_VLEINFO;

SELECT CODE_MODULE, CODE_PRESENTATION, ID_STUDENT, ID_SITE, DATE_,SUM_CLICK FROM
STUVLEINFO_S1STAGEAREA;

-- log ETL changes

DROP table etl_log cascade constraints;

CREATE TABLE etl_log
(issue_id NUMBER(5) NOT NULL,
table_name VARCHAR2(40),
data_error_code NUMBER(5),
issue_desc VARCHAR2(50),
issue_date DATE,
issue_status VARCHAR2(20),
status_update_date DATE);

drop sequence EL_SEQ;

create sequence EL_SEQ
start with 1
increment by 1
maxvalue 10000
minvalue 1;

-- Transformations
-- Transformations done for STUVLEINFO_S1STAGEAREA

DROP TRIGGER trg_quality_chk ;

CREATE or REPLACE trigger trg_quality_chk
 before update on STUVLEINFO_S1STAGEAREA 
 for each row
begin 
 INSERT INTO ETL_log
 (issue_id, table_name, data_error_code, issue_desc, issue_date, issue_statu
s, status_update_date)
 VALUES
 (EL_SEQ.nextval, 'STUVLEINFO_S1STAGEAREA', '0', 'Quality checks', SYSDATE, 'com
pleted', SYSDATE);
end;

ALTER TABLE STUVLEINFO_S1STAGEAREA RENAME COLUMN DATE_ to NO_OF_DAYS;

select count (*) from STUVLEINFO_S1STAGEAREA;

-- REMOVE ROWS WHICH HAVE NEGATIVE VALUES FOR NO_OF_DAYS

SELECT CODE_MODULE, CODE_PRESENTATION, ID_STUDENT, ID_SITE, NO_OF_DAYS,SUM_CLICK
 FROM STUVLEINFO_S1STAGEAREA WHERE NO_OF_DAYS < 0;
 
 UPDATE STUVLEINFO_S1STAGEAREA SET NO_OF_DAYS = 0 WHERE NO_OF_DAYS < 0;
 
-- Delete null values if there's any null values for NO_OF_DAYS and SUM_CLICK

DELETE FROM STUVLEINFO_S1STAGEAREA WHERE NO_OF_DAYS IS NULL;
DELETE FROM STUVLEINFO_S1STAGEAREA WHERE SUM_CLICK IS NULL;
SELECT CODE_MODULE, CODE_PRESENTATION, ID_STUDENT, ID_SITE, NO_OF_DAYS,SUM_CLICK
 FROM STUVLEINFO_S1STAGEAREA;
-- Getting only year from the STUVLEINFO_S1STAGEAREA and create STUVLEINFO_S2STAGEAREA

CREATE TABLE STUVLEINFO_S2STAGEAREA AS SELECT CODE_MODULE, REGEXP_REPLACE (CODE_
PRESENTATION, '[^[:digit:]]', '') AS PRESENTING_YEAR,ID_STUDENT,ID_SITE,NO_OF_DAY
S ,SUM_CLICK
FROM STUVLEINFO_S1STAGEAREA;

select * from STUVLEINFO_S2STAGEAREA;
SELECT * FROM etl_log;

select count (*) from STUVLEINFO_S1STAGEAREA;

-- Transformations done for VLEINFO_S1STAGEAREA

DROP TRIGGER trg_quality_chk2 ;

CREATE or REPLACE trigger trg_quality_chk2
 before update on VLEINFO_S1STAGEAREA 
 for each row
begin 
 INSERT INTO ETL_log
 (issue_id, table_name, data_error_code, issue_desc, issue_date, issue_statu
s, status_update_date)
 VALUES
 (EL_SEQ.nextval, 'VLEINFO_S1STAGEAREA', '0', 'Quality checks', SYSDATE, 'comple
ted', SYSDATE);
end;

SELECT DISTINCT activity_type FROM VLEINFO_S1STAGEAREA;

-- updating activity type column

UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'HTML_RESOURCES' WHERE ACTIVITY_TYPE ='htmlactivity';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'LOGGING_INTO_HOMEPAGE' WHERE ACTIVITY_TYPE ='homepage';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'FORUM_TYPE' WHERE ACTIVITY_TYPE ='forumng';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'OUT_COLLABORATE' WHERE ACTIVITY_TYPE ='oucollaborate';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'EXTERNAL_QUIZES' WHERE ACTIVITY_TYPE ='externalquiz';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'SUB_PAGE' WHERE ACTIVITY_TYPE ='subpage';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'QUIZ' WHERE ACTIVITY_TYPE ='quiz';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'FOLDER' WHERE ACTIVITY_TYPE ='folder';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'OUCONTENT' WHERE ACTIVITY_TYPE ='oucontent';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'SHARED_SUB_PAGE' WHERE ACTIVITY_TYPE ='sharedsubpage';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'DATAPLUS' WHERE ACTIVITY_TYPE ='dataplus';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'OUELLUMINATE' WHERE ACTIVITY_TYPE='ouelluminate';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'URL_TYPE' WHERE ACTIVITY_TYPE ='url';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'OUWIKI' WHERE ACTIVITY_TYPE ='ouwiki';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'PAGE' WHERE ACTIVITY_TYPE ='page';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'GLOSSARY' WHERE ACTIVITY_TYPE ='glossary';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'QUESTIONNAIRE' WHERE ACTIVITY_TYPE ='questionnaire';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'DUALPANE' WHERE ACTIVITY_TYPE ='dualpane';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'REPEAT_ACTIVITY' WHERE ACTIVITY_TYPE ='repeatactivity';
UPDATE VLEINFO_S1STAGEAREA SET ACTIVITY_TYPE = 'RESOURCE' WHERE ACTIVITY_TYPE ='resource';

SELECT DISTINCT activity_type FROM VLEINFO_S1STAGEAREA;

ALTER TABLE VLEINFO_S1STAGEAREA RENAME COLUMN ACTIVITY_TYPE to VLE_MATERIAL_TYPE;
-- Changes for SCD

DROP table tmp_vleType;
Create table tmp_vleType as SELECT DISTINCT VLE_MATERIAL_TYPE FROM VLEINFO_S1STAGEAREA;

ALTER TABLE tmp_vleType
ADD (ROW_EFFECTIVE_DATE date,
ROW_EXPIRATION_DATE date,
CURRENT_ROW_INDICATOR VARCHAR(20));

UPDATE tmp_vleType
SET
ROW_EFFECTIVE_DATE = sysdate,
ROW_EXPIRATION_DATE = '12/31/9999',
CURRENT_ROW_INDICATOR ='CURRENTLY_USING';